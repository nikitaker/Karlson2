@startuml

title __SRC's Class Diagram__\n

  package  {
    class EndOfStoryException {
        + EndOfStoryException()
    }
  }
  

  package  {
    class WrappedPrintWriter {
        - printWriter : PrintWriter
        ~ WrappedPrintWriter()
        ~ lock()
        ~ println()
    }
  }
  

  package  {
    class WrappedPrintStream {
        - printStream : PrintStream
        ~ WrappedPrintStream()
        ~ lock()
        ~ println()
    }
  }
  

  package  {
    abstract class PrintStreamOrWriter {
        - PrintStreamOrWriter()
        {abstract} ~ lock()
        {abstract} ~ println()
    }
  }
  

  package  {
    class SentinelHolder {
        {static} + STACK_TRACE_ELEMENT_SENTINEL : StackTraceElement
        {static} + STACK_TRACE_SENTINEL : StackTraceElement[]
        - SentinelHolder()
    }
  }
  

  package  {
    interface Helicopter {
        {abstract} + fly()
    }
  }
  

  package  {
    class Hero {
        - name : String
        ~ setName()
        ~ go()
        + toString()
        + hashCode()
        + equals()
    }
  }
  

  package  {
    class Karlson {
        ~ dress()
        ~ undress()
        + isSeen()
        ~ swipeHand()
        + fly()
        + talk()
        + scream()
    }
  }
  

  package  {
    class Main {
        {static} + main()
    }
  }
  

  package  {
    class NoNameException {
        + NoNameException()
    }
  }
  

  package  {
    class WrappedPrintWriter {
        - printWriter : PrintWriter
        ~ WrappedPrintWriter()
        ~ lock()
        ~ println()
    }
  }
  

  package  {
    class WrappedPrintStream {
        - printStream : PrintStream
        ~ WrappedPrintStream()
        ~ lock()
        ~ println()
    }
  }
  

  package  {
    abstract class PrintStreamOrWriter {
        - PrintStreamOrWriter()
        {abstract} ~ lock()
        {abstract} ~ println()
    }
  }
  

  package  {
    class SentinelHolder {
        {static} + STACK_TRACE_ELEMENT_SENTINEL : StackTraceElement
        {static} + STACK_TRACE_SENTINEL : StackTraceElement[]
        - SentinelHolder()
    }
  }
  

  package  {
    abstract class People {
        ~ name : String
        ~ setName()
        ~ go()
        + isSeen()
        + isSeen()
        + talk()
        + scream()
        + toString()
        + hashCode()
        + equals()
    }
  }
  

  package  {
    interface Person {
        {abstract} + isSeen()
        {abstract} + talk()
        {abstract} + scream()
    }
  }
  

  package  {
    enum State {
      KARLSON
      WITCH
      DEAD
    }
  }
  

  package  {
    class Task {
        + method()
        ~ Task()
    }
  }
  

  package  {
    class StaticNestedClass {
    }
  }
  

  package  {
    class NestedClass {
    }
  }
  

  EndOfStoryException +-down- WrappedPrintWriter
  EndOfStoryException +-down- WrappedPrintStream
  EndOfStoryException +-down- PrintStreamOrWriter
  EndOfStoryException +-down- SentinelHolder
  Hero -up-|> People
  Karlson -up-|> Person
  Karlson -up-|> Helicopter
  Karlson o-- State : state
  NoNameException +-down- WrappedPrintWriter
  NoNameException +-down- WrappedPrintStream
  NoNameException +-down- PrintStreamOrWriter
  NoNameException +-down- SentinelHolder
  People -up-|> Person
  Task +-down- StaticNestedClass
  Task +-down- NestedClass


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
